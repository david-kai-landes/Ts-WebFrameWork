{"version":3,"sources":["src/modals/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;ADKtB,ECLwB,IAAI,EAAE,IDK9B,KCLsB;EAAmB,ADQvC,GCR0C,EAAE,IDQ5C,IAAA,CAAoB,IAApB,EAAmC;ACRf,CAAT,CAAb,EDQsB,KAAA,IAAA,GAAA,IAAA;ACNtB,IAAI,ADIF,CCJG,EAAL,CAAQ,CDIN,MAAA,CCJF,EAAkB,ADIwB,EAAxC,UCJgB;EAChB,ADKuC,OCLhC,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGA,EDKE,ECLE,CAAC,CDKH,CCLF,ADKE,CCLM,QAAR,ADKE,CAAA,CCLgB,EDKhB,GAAA,OCLgB,GDKZ,QAAJ,EAAoB;ECJpB,EDKE,KCLK,CAAC,CDKC,ECLT,CAAY,EDKE,IAAL,CAAU,ICLnB,IDKS,CAAP;ACJH,CAFD,CDOG,CAFD;ACFF,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;EACd,ADKA,IAAA,CAAA,ECLO,CAAC,GAAR,CAAY,EDKZ,CAAA,GAAA,GAAA,SCLA,CDKI,MAAJ,EAAqB;ACJtB,CAFD,GDOI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACHJ,EDIG,CAFD,CCFE,CAAC,OAAL,CAAa,MAAb;;EDME,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;IACtC,IAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;IACA,QAAQ,CAAC,IAAT,CAAc,QAAd;IACA,KAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;EACD,CAJD;;EAMA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;IACvB,IAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;IACA,IAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;MACtC;IACD;;IAED,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;MACxB,QAAQ;IACT,CAFD;EAGD,CATD;;EAUF,OAAA,IAAA;AA7BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: UserProps) {}\r\n\r\n  get(propName: string): number | string {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: UserProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n    if (!handlers || handlers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    handlers.forEach((callback) => {\r\n      callback();\r\n    });\r\n  }\r\n}\r\n","import { User } from \"./modals/User\";\r\n\r\nconst user = new User({ name: \"my name\", age: 20 });\r\n\r\nuser.on(\"change\", () => {\r\n  console.log(\"change #1\");\r\n});\r\nuser.on(\"change\", () => {\r\n  console.log(\"change #2\");\r\n});\r\nuser.on(\"save\", () => {\r\n  console.log(\"save was trigged\");\r\n});\r\n\r\nuser.trigger(\"save\");\r\n"]}